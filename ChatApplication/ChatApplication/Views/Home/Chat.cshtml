
@{
    ViewData["Title"] = "Chat";
}

<h1>Chat</h1>



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>SignalR Chat</title>
</head>
<body>




    <input type="text" id="msg" name="msg" />
    <input type="text" id="userId" name="userId" value="@ViewBag.id" hidden />

    <button type="button" class="btn btn-primary" onclick="submitStudent()">Submit</button>



    <div id="notify"></div>


    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        function submitStudent() {
            var data = document.getElementById("msg").value;

            $.ajax({
                type: 'POST',
                url: '/Home/Chat',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
                data: { "msg": $("#msg").val(), "id": $("#userId").val() },
                success: function (result) {
                },
                error: function () {
                    alert('Failed to receive the Data');

                }
            })
        }




        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        // получение сообщения от сервера
        hubConnection.on('Notify', function (message) {

            // создает элемент <p> для сообщения пользователя
            let elem = document.createElement("p");
            elem.appendChild(document.createTextNode(message));



            document.getElementById("notify").appendChild(elem);

        });
        hubConnection.start();
    </script>
</body>
</html>


